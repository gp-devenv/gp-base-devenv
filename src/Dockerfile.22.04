#
# gp-base-devenv
# Copyright (c) 2023-2024, Greg PFISTER. MIT License.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

# ------------------------------------------------------------------------------
# Build gp-base-devenv image
# ------------------------------------------------------------------------------

FROM ubuntu:22.04

LABEL org.opencontainers.image.source=https://github.com/gp-devenv/gp-base-devenv
LABEL org.opencontainers.image.description="Base dev container for VS Code running Ubuntu 22.04"
LABEL org.opencontainers.image.licenses=MIT

# Timezone
ENV TZ="Europe/Paris"

# For persistent volumes
VOLUME [ "/home" ]

# Entrypoint script
COPY dist/entrypoint.sh /entrypoint.sh

# Remove unwanted files (not possible via .dockerignore)
RUN rm -rf scripts

# Set the timezone
RUN apt-get update && \
    apt-get install -y tzdata

# Set locales
RUN apt-get update && \
    apt-get install -y locales && \
    dpkg-reconfigure locales
COPY ./dist/etc/locale.gen /etc/locale.gen
RUN locale-gen

# Update all
RUN apt-get update && \
    apt-get full-upgrade -y

# Install essential packages
RUN apt-get update && \
    apt-get install -y build-essential \
                       automake \
                       autoconf \
                       checkinstall \ 
                       curl \
                       wget \
                       software-properties-common \ 
                       less \
                       ncdu \
                       nmap \
                       zsh \
                       vim \
                       git \
                       unzip \
                       usbutils \
                       tmux \
                       htop \
                       neofetch \
                       gdb && \
    apt-get autoclean -y && \
    apt-get autoremove -y

# Starship
RUN curl -sS https://starship.rs/install.sh -o install.sh && \
    sh install.sh --yes && \
    rm install.sh

# Setup sudo
RUN apt-get update && \
    apt-get install -y sudo

# Scripts
RUN mkdir -p /usr/local/lib/gp-devenv/
COPY dist/usr/local/lib/gp-devenv/scripts /usr/local/lib/gp-devenv/scripts/

# Basic script
RUN mkdir -p /etc/gp-devenv
COPY dist/etc/gp-devenv/zshrc.d /etc/gp-devenv/zshrc.d/

# Default for users
WORKDIR /etc/skel
COPY dist/etc/skel/.zshrc .
COPY dist/etc/skel/.vimrc .
COPY dist/etc/skel/.tmux.conf .
COPY dist/etc/skel/.config .config/
RUN mkdir -p .bin .cache
RUN curl -fLo /etc/skel/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
RUN git clone https://github.com/tmux-plugins/tpm /etc/skel/.tmux/plugins/tpm

# Adjust root user
WORKDIR /root
RUN chsh -s /bin/zsh root
COPY dist/etc/skel/.zshrc .
COPY dist/etc/skel/.vimrc .
COPY dist/etc/skel/.tmux.conf .
COPY dist/etc/skel/.config .config/
RUN mkdir -p .bin .cache
RUN curl -fLo .vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
RUN git clone https://github.com/tmux-plugins/tpm .tmux/plugins/tpm

# Add vscode user
RUN useradd -s /bin/zsh -m vscode
RUN echo "vscode ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/vscode

# Install nginx
RUN apt-get update && \
    apt-get install -y nginx-light && \
    apt-get autoclean -y && \
    apt-get autoremove -y

# # Copy gp-devenv-dev from build stage
# RUN rm -rf /var/www/html
# COPY --from=build /workspace/gp-devenv-app/dist/gp-devenv-app /var/www/html
# RUN chown -R www-data: /var/www/html

# Switch to vs code user
USER vscode
WORKDIR /workspace

# Set /workspace as a safe git directory
RUN git config --global --add safe.directory /workspace

# Back to root
USER root

EXPOSE 80

ENTRYPOINT [ "/entrypoint.sh" ]

# End